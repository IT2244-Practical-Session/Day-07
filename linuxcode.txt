$ touch astro.sh

User@DINUKA ~
$ vi astro.sh
E1187: Failed to source defaults.vim
Press ENTER or type command to continue

echo 'Enter your birth date: '        # Prompt user to enter date of birth
read date                             # Read and store the date

# Get the sum of digits 
a=$(($date%10))                       # Get the last digit of the date
b=$(($date/10))                       # Get the first digit(s) 
c=$(($a+$b))                          # Sum the digits

# Use case to give the message according to number
case $c in
1)echo "Lucky";;
2)echo "Carefuly do your work";;
3)echo "Storger";;
4)echo "Happy";;
5)echo "Can get help";;
6)echo "Doubt";;
7)echo "Sad";;
8)echo "Like";;
9)echo "Courage";;
*)

# If result is greater than 9, reduce again by summing digit
x=$(($c%10))              # Last digit
y=$(($c/10))              # Remaining digit(s)
z=$(($x+$y))              # Sum digits again

# Use case to give the message according to number
case $z in
1)echo "Lucky";;
2)echo "Carefuly do your work";;
3)echo "Storger";;
4)echo "Happy";;
5)echo "Can get help";;
6)echo "Doubt";;
7)echo "Sad";;
8)echo "Like";;
9)echo "Courage";;
*)echo "Try again!";;
esac;;

esac
User@DINUKA ~
$ chmod 777 astro.sh

User@DINUKA ~
$ ./astro.sh
Enter your birth date:
29
Carefuly do your work
################################################
//Syntax for for loop:                         
                                               
for varible in list                            
    do 
        commands
	done

################################################	
//Syntax for while loop:

while [ condition ]
    do
	    commands
	done
################################################

################################################	
//Syntax for nested for loop:

for((variable=0; variable<=input;variable++))
 do
  for((variable=0; variable<=input;variable++))
   do
    commands
   done
 done
################################################

User@DINUKA ~
$ touch q2.sh

User@DINUKA ~
$ vi q2.sh
E1187: Failed to source defaults.vim
Press ENTER or type command to continue

sum=0;                     # Initialize sum to 0
mul=1;                     # Initialize multiplication to 1

# Loop through numbers
for num in 1 2 3 4 5     
do
sum=$((sum+num))         # Add number to sum
mul=$((mul*num))         # Multiply number to mul
done

#Display summation and multiplication
echo "Summation:$sum"
echo "Multiplication:$mul"

User@DINUKA ~
$ chmod 777 q2.sh

User@DINUKA ~
$ ./q2.sh
Summation:15
Multiplication:120
$ touch ex3.sh

User@DINUKA ~
$ vi ex3.sh
E1187: Failed to source defaults.vim
Press ENTER or type command to continue

i=1                    # Initialize counter

# While loop from 1 to 10
while [ $i -le 10 ]    
do
echo $i              # Print current value
i=$(($i+1))          # Increment counter
done
User@DINUKA ~
$ chmod 777 ex3.sh

User@DINUKA ~
$ ./ex3.sh
1
2
3
4
5
6
7
8
9
10

User@DINUKA ~
$ touch q4.sh

User@DINUKA ~
$ vi q4.sh
E1187: Failed to source defaults.vim
Press ENTER or type command to continue

# Ask user to input number of rows and columns
echo 'Enter number of Rows: '      
read rows
echo 'Enter number of Columns: '
read cols

# (I) Increasing triangle pattern
for ((i=1; i<=rows; i++))
do
for ((j=1; j<=i; j++))
do
echo -n '* '            # Print star in same line
done
echo ''                 # Move to next line
done

echo " "


# (II) Decreasing triangle pattern
for ((i=1; i<=rows; i++))
do
for ((j=cols+1; j>i; j--))
do
echo -n '* '          # Print star in same line
done
echo ''               # Move to next line
done

echo " "


# (III) Same number repeated in each row
for ((i=1; i<=rows; i++))
do
for ((j=1; j<=i; j++))
do
echo -n $i " "      # Print current row number
done
echo ''
done

echo " "

# (IV) Increasing number sequence in each row
for ((i=1; i<=rows; i++))
do
for ((j=1; j<=i; j++))
do
echo -n $j " "     # Print increasing numbers
done
echo ''
done

echo " "

# (V) Pyramid pattern
for ((i=1; i<=rows; i++))
do
    for ((k=1; k<=rows-i; k++))
    do
        echo -n " "    # Print spaces to align stars
    done

    for ((j=1; j<=i; j++))
    do
        echo -n "* "   # Print stars
    done

    echo ""
done

User@DINUKA ~
$ chmod 777 q4.sh

User@DINUKA ~
$ ./q4.sh
Enter number of Rows:
5
Enter number of Columns:
6
*
* *
* * *
* * * *
* * * * *

* * * * * *
* * * * *
* * * *
* * *
* *

1
2  2
3  3  3
4  4  4  4
5  5  5  5  5

1
1  2
1  2  3
1  2  3  4
1  2  3  4  5

    *
   * *
  * * *
 * * * *
* * * * *

